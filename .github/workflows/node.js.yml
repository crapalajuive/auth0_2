# Treating warnings as errors because process.env.CI = true

name: Auth0_2 CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        # node-version: [18.x]
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

#        cache: 'yarn'

    - run: npm ci

#    - run: yarn install --frozen-lockfile

    - name: Check if CNAME exists
      id: check-cname
      run: |
        if [ -f ${GITHUB_WORKSPACE}/public/CNAME ]; then
          echo "CNAME file found"
          echo "file_exists=true" >> $GITHUB_OUTPUT
        else
          echo "CNAME file not found"
          echo "file_exists=false" >> $GITHUB_OUTPUT
        fi

    - name: set environment vars
      id: set-repo
      run: |
        echo "repo name?: ${{ github.event.repository.name }}"
        if [ "${{ steps.check-cname.outputs.file_exists }}" == "true" ]; then
          echo "CNAME file exists, set repo to nothing"
          echo "REACT_APP_GITHUB_REPO=''" >> $GITHUB_OUTPUT
        else
          echo "CNAME file does not exist, setting REACT_APP_GITHUB_REPO=${{ github.event.repository.name }}"
          echo "REACT_APP_GITHUB_REPO=${{ github.event.repository.name }}" >> $GITHUB_OUTPUT
        fi

#        yarn build
    - name: npm or yarn build
      run: |
        echo "repo name?: ${REACT_APP_GITHUB_REPO}"
        npm run build --if-present
      env:
          REACT_APP_AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN_C }}
          REACT_APP_AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID_C }}
          REACT_APP_GITHUB_REPO: ${{steps.set-repo.outputs.REACT_APP_GITHUB_REPO}}
          CI: false
#          REACT_APP_GITHUB_REPO: "auth0_1"
#          REACT_APP_GITHUB_REPO: ${{ github.event.repository.name }}
    # - run: npm test

    # requires read/write perms to repo
    - name: deploy to gh-pages
      run: |
        echo "repo name?: ${REACT_APP_GITHUB_REPO}"
        git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        npm run deploy -- -u "github-actions-bot <support+actions@github.com>"
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REACT_APP_AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN_C }}
          REACT_APP_AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID_C }}
          REACT_APP_GITHUB_REPO: ${{steps.set-repo.outputs.REACT_APP_GITHUB_REPO}}
